// Implements a dictionary's functionality
#include <string.h>
#include <stdbool.h>
#include <cs50.h>

#include "dictionary.h"

// Returns true if word is in dictionary else false
bool check(const char *word)
{
    // TODO
    node *cursor = head;
    whie(cursor != NULL)
    {
        // do something
        cursor = cursor -> next;
    }
    return false;
}

// Loads dictionary into memory, returning true if successful else false
bool load(const char *dictionary)
{
    // TODO
    typedef struct node
    {
        char word [LENGTH + 1];
        struct node *next;
    }
    node;
    node *hashtable[26];

    node *node 1 = mallac(sizeof(node));
    node *node 2 = mallac(sizeof(node));
    strcpy(node 1 -> word, "");
    strcpy(node 2 -> word, "");
    node 1 -> next = node 2;
    return false;
}

// Returns number of words in dictionary if loaded else 0 if not yet loaded
unsigned int size(void)
{
    // TODO
    return 0;
}

// Unloads dictionary from memory, returning true if successful else false
bool unload(void)
{
    // TODO
    return false;
}